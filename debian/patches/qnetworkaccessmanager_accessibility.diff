Description: make sure networkAccessibilityChanged is emitted
Origin: upstream, http://code.qt.io/cgit/qt/qtbase.git/commit/?id=bb281eea179d50a4
Bug: https://bugs.debian.org/804883
Last-Update: 2015-11-17

--- a/src/network/access/qnetworkaccessmanager.cpp
+++ b/src/network/access/qnetworkaccessmanager.cpp
@@ -278,7 +278,8 @@
 
     \snippet code/src_network_access_qnetworkaccessmanager.cpp 4
 
-    Network requests can be reenabled again by calling
+    Network requests can be re-enabled again, and this property will resume to
+    reflect the actual device state by calling
 
     \snippet code/src_network_access_qnetworkaccessmanager.cpp 5
 
@@ -467,16 +468,12 @@
     qRegisterMetaType<QSharedPointer<char> >();
 
 #ifndef QT_NO_BEARERMANAGEMENT
-    if (!d->networkSessionRequired) {
-        // if a session is required, we track online state through
-        // the QNetworkSession's signals
-        connect(&d->networkConfigurationManager, SIGNAL(onlineStateChanged(bool)),
-                SLOT(_q_onlineStateChanged(bool)));
-    }
-    // we would need all active configurations to check for
-    // d->networkConfigurationManager.isOnline(), which is asynchronous
-    // and potentially expensive. We can just check the configuration here
-    d->online = (d->networkConfiguration.state() & QNetworkConfiguration::Active);
+    // if a session is required, we track online state through
+    // the QNetworkSession's signals if a request is already made.
+    // we need to track current accessibility state by default
+    //
+    connect(&d->networkConfigurationManager, SIGNAL(onlineStateChanged(bool)),
+            SLOT(_q_onlineStateChanged(bool)));
 #endif
 }
 
@@ -946,7 +943,8 @@
 void QNetworkAccessManager::setNetworkAccessible(QNetworkAccessManager::NetworkAccessibility accessible)
 {
     Q_D(QNetworkAccessManager);
-    d->defaultAccessControl = false;
+
+    d->defaultAccessControl = accessible == NotAccessible ? false : true;
 
     if (d->networkAccessible != accessible) {
         NetworkAccessibility previous = networkAccessible();
@@ -965,6 +963,10 @@
 QNetworkAccessManager::NetworkAccessibility QNetworkAccessManager::networkAccessible() const
 {
     Q_D(const QNetworkAccessManager);
+
+    if (d->networkConfiguration.state().testFlag(QNetworkConfiguration::Undefined))
+        return UnknownAccessibility;
+
     if (d->networkSessionRequired) {
         QSharedPointer<QNetworkSession> networkSession(d->getNetworkSession());
         if (networkSession) {
@@ -1622,32 +1624,56 @@
     if (online) {
         if (state != QNetworkSession::Connected && state != QNetworkSession::Roaming) {
             online = false;
-            networkAccessible = QNetworkAccessManager::NotAccessible;
-            emit q->networkAccessibleChanged(networkAccessible);
+            if (networkAccessible != QNetworkAccessManager::NotAccessible) {
+                networkAccessible = QNetworkAccessManager::NotAccessible;
+                emit q->networkAccessibleChanged(networkAccessible);
+            }
         }
     } else {
         if (state == QNetworkSession::Connected || state == QNetworkSession::Roaming) {
             online = true;
             if (defaultAccessControl)
-                networkAccessible = QNetworkAccessManager::Accessible;
-            emit q->networkAccessibleChanged(networkAccessible);
+                if (networkAccessible != QNetworkAccessManager::Accessible) {
+                    networkAccessible = QNetworkAccessManager::Accessible;
+                    emit q->networkAccessibleChanged(networkAccessible);
+                }
         }
     }
 }
 
 void QNetworkAccessManagerPrivate::_q_onlineStateChanged(bool isOnline)
 {
-    // if the user set a config, we only care whether this one is active.
+   Q_Q(QNetworkAccessManager);
+   // if the user set a config, we only care whether this one is active.
     // Otherwise, this QNAM is online if there is an online config.
     if (customNetworkConfiguration) {
         online = (networkConfiguration.state() & QNetworkConfiguration::Active);
     } else {
-        if (isOnline && online != isOnline) {
-            networkSessionStrongRef.clear();
-            networkSessionWeakRef.clear();
+        if (online != isOnline) {
+            if (isOnline) {
+                networkSessionStrongRef.clear();
+                networkSessionWeakRef.clear();
+            }
+            online = isOnline;
+        }
+    }
+    if (online) {
+        if (defaultAccessControl) {
+            if (networkAccessible != QNetworkAccessManager::Accessible) {
+                networkAccessible = QNetworkAccessManager::Accessible;
+                emit q->networkAccessibleChanged(networkAccessible);
+            }
+        }
+    } else if (networkConfiguration.state().testFlag(QNetworkConfiguration::Undefined)) {
+        if (networkAccessible != QNetworkAccessManager::UnknownAccessibility) {
+            networkAccessible = QNetworkAccessManager::UnknownAccessibility;
+            emit q->networkAccessibleChanged(networkAccessible);
+        }
+    } else {
+        if (networkAccessible != QNetworkAccessManager::NotAccessible) {
+            networkAccessible = QNetworkAccessManager::NotAccessible;
+            emit q->networkAccessibleChanged(networkAccessible);
         }
-
-        online = isOnline;
     }
 }
 
--- a/src/network/access/qnetworkaccessmanager_p.h
+++ b/src/network/access/qnetworkaccessmanager_p.h
@@ -78,7 +78,6 @@
           customNetworkConfiguration(false),
           networkSessionRequired(networkConfigurationManager.capabilities()
                                  & QNetworkConfigurationManager::NetworkSessionRequired),
-          networkAccessible(QNetworkAccessManager::Accessible),
           activeReplyCount(0),
           online(false),
           initializeSession(true),
@@ -86,7 +85,18 @@
           cookieJarCreated(false),
           defaultAccessControl(true),
           authenticationManager(QSharedPointer<QNetworkAccessAuthenticationManager>::create())
-    { }
+    {
+#ifndef QT_NO_BEARERMANAGEMENT
+        // we would need all active configurations to check for
+        // d->networkConfigurationManager.isOnline(), which is asynchronous
+        // and potentially expensive. We can just check the configuration here
+        online = (networkConfiguration.state().testFlag(QNetworkConfiguration::Active));
+        if (online)
+            networkAccessible = QNetworkAccessManager::Accessible;
+        else
+            networkAccessible = QNetworkAccessManager::NotAccessible;
+#endif
+    }
     ~QNetworkAccessManagerPrivate();
 
     void _q_replyFinished();
--- a/tests/auto/network/access/qnetworkaccessmanager/tst_qnetworkaccessmanager.cpp
+++ b/tests/auto/network/access/qnetworkaccessmanager/tst_qnetworkaccessmanager.cpp
@@ -74,6 +74,10 @@
     // if there is no session, we cannot know in which state we are in
     QNetworkAccessManager::NetworkAccessibility initialAccessibility =
             manager.networkAccessible();
+
+    if (initialAccessibility == QNetworkAccessManager::UnknownAccessibility)
+          QSKIP("Unknown accessibility", SkipAll);
+
     QCOMPARE(manager.networkAccessible(), initialAccessibility);
 
     manager.setNetworkAccessible(QNetworkAccessManager::NotAccessible);
@@ -94,29 +98,28 @@
     QCOMPARE(manager.networkAccessible(), initialAccessibility);
 
     QNetworkConfigurationManager configManager;
-    bool sessionRequired = (configManager.capabilities()
-                            & QNetworkConfigurationManager::NetworkSessionRequired);
     QNetworkConfiguration defaultConfig = configManager.defaultConfiguration();
     if (defaultConfig.isValid()) {
         manager.setConfiguration(defaultConfig);
 
-        // the accessibility has not changed if no session is required
-        if (sessionRequired) {
+        QCOMPARE(spy.count(), 0);
+
+        if (defaultConfig.state().testFlag(QNetworkConfiguration::Active))
+            QCOMPARE(manager.networkAccessible(), QNetworkAccessManager::Accessible);
+        else
+            QCOMPARE(manager.networkAccessible(), QNetworkAccessManager::NotAccessible);
+
+        manager.setNetworkAccessible(QNetworkAccessManager::NotAccessible);
+
+        if (defaultConfig.state().testFlag(QNetworkConfiguration::Active)) {
             QCOMPARE(spy.count(), 1);
-            QCOMPARE(spy.takeFirst().at(0).value<QNetworkAccessManager::NetworkAccessibility>(),
-                     QNetworkAccessManager::Accessible);
+            QCOMPARE(QNetworkAccessManager::NetworkAccessibility(spy.takeFirst().at(0).toInt()),
+                     QNetworkAccessManager::NotAccessible);
         } else {
             QCOMPARE(spy.count(), 0);
         }
-        QCOMPARE(manager.networkAccessible(), QNetworkAccessManager::Accessible);
-
-        manager.setNetworkAccessible(QNetworkAccessManager::NotAccessible);
-
-        QCOMPARE(spy.count(), 1);
-        QCOMPARE(QNetworkAccessManager::NetworkAccessibility(spy.takeFirst().at(0).toInt()),
-                 QNetworkAccessManager::NotAccessible);
-        QCOMPARE(manager.networkAccessible(), QNetworkAccessManager::NotAccessible);
     }
+    QCOMPARE(manager.networkAccessible(), QNetworkAccessManager::NotAccessible);
 #endif
 }
 
